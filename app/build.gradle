apply plugin: 'com.android.application'

project.ext.ASSET_DIR = projectDir.toString() + '/src/main/assets'

//assert file(project.ext.ASSET_DIR + "/flower_model.tflite").exists()
//assert file(project.ext.ASSET_DIR + "/flower_labels.txt").exists()


android {

    apply plugin: 'com.android.application'
    // Add this line
    apply plugin: 'com.google.gms.google-services'

    compileSdkVersion 28
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "edu.ilab.covid_id"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    // TODO: Add an option to avoid compressing TF Lite model file
    aaptOptions {
        noCompress "tflite"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir dirs: '/src/main/assets'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'org.jetbrains:annotations:15.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    // Add dependencies for different GUI elements used
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    // Add TFLite dependencies
    implementation('org.tensorflow:tensorflow-lite:0.0.0-nightly') { changing = true }
    implementation('org.tensorflow:tensorflow-lite-gpu:0.0.0-nightly') { changing = true }
    implementation('org.tensorflow:tensorflow-lite-support:0.0.0-nightly') { changing = true }

    // This dependency adds the necessary TF op support.
    implementation 'org.tensorflow:tensorflow-lite-select-tf-ops:0.0.0-nightly'

    // for Firebase
    implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'com.google.firebase:firebase-firestore:21.4.3'
    implementation 'com.google.firebase:firebase-auth:19.3.1'

    //for Firebase storage
    implementation 'com.google.firebase:firebase-storage:19.1.1'

    // for Google Play services
    implementation 'com.google.android.gms:play-services-maps:16.1.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
    implementation 'com.google.android.gms:play-services-places:17.0.0'

    // for better map query operations
    implementation 'com.github.chintan369:Geo-FireStore-Query:1.1.0'


    // for IR Flir services
   //using OLD style implementation --depending on which Gradle Build tools you use
   // implementation(name: 'androidsdk-release',ext: 'aar')
    //implementation(name: 'thermalsdk-release',ext: 'aar')

    // Dependency on a local library module
    implementation project(":androidsdk-release")
    implementation project(":thermalsdk-release")

}
